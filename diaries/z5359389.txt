Week 1:
Assigned roles for Figma.
Created the Jira and assigned Eric as the Scrum Master.
Registered for the team in Moodle.
Voted and agreed on the topic of 'learning management system' as our project. 


Week 2
Planned meetings. 
Visual mockups started.
Language of React chosen.
Partially wrote design proposals and subsequent user stories.

Week 3
Got rejected for designs even though I liked it.
Iterated 4 more designs and created a mascot.
Came up with the project name.
Overhauled the theme and design of the project and finished the mockups.
Added flow diagram and user stories to the figma.
Added the pages of Forum, Create Post, Create Tag to the figma

Week 4
Assigned user stories as code issues.
Started coding structure of front-end login pages.
Responsiveness turned out to be difficult and the scrum master said to leave it for the next sprint.

Week 5
Finished login pages for teachers and students.
Struggled connecting to the backend as the backend team couldn't sort out what calls and permissions and settings were required.
Solved it regardless and connected to other pages through route navigation.
Backend and Front end connected, styling details added.
Extra tasks were abruptly assigned to me (the design and coding of 3 new pages dynamically changing on one page) right before the due date.
Created 3 screens that dynamically changed on one page 'forgot password', 'email verification', and 'password reset'.
Suddenly informed that only 2 screens were needed.
Suddenly informed that 2 separate pages were needed.
Fixed pages as much as possible.
Planning to refine it next sprint.
Presented Demo A.
Retrospective noticed that the mascot overlapped with the button due to a smaller demo screen.
The issue should be resolved with responsiveness next sprint.
The visibility button on the reset password page would make both password and confirm password inputs visible/hidden.
Assigned role of Forum and part of Tutorial/Lecture resources.

Week 6
fixed the retrospective issues from sprint 1 through a responsive login page and fixed the visibility button.
started coding forum structure.
Extra tasks assigned to me with new pages 'comments page' were not considered by the Figma page.
created structure of forumPage, createPostPage, createTagPage but no backend connection.

Week 7 
Struggled incredibly with connecting to the backend which turned out to be a backend issue.
fixed issue with the introduction of csrftoken and changes to how header and body sections are passed.
Connected to the backend to generate posts and tags.
Designed and created structure for 'commentsPage'.
connected to the backend for the like button and comment button.

Week 8
Fixed a lot of errors that were mostly from backend API calls.
Added features of sorting by time, sorting by likes, and sorting by tags.
struggled with rerendering issues.
struggled with connecting to the backend as the wiki was always out of date or incorrect.
pair programmed with Eric to fix issues.
demoed for sprint 2.
retrospective found errors with 'backend liking post' 'frontend time sorting' 'frontend tag filtering' 'frontend showing user info'

Week 9
Fixed tasks from retrospective
Reconnected to the backend for broken features and new features such as delete and edit
Made style fixes to hover, svg availability, colour etc.

Week 10
Added new features such as default image, image upload, edit post image etc.
Transferred post functionality to comments - like, edit, delete.
Made tags scrollable in case they overflow
Presented demo
Style fixes

Week 1-3
Figma:
    Login pages
    Forum page
    create tag page
    create post page
    flow diagram and user stories

Week 4-5
login features:
    design card on the left with mascot and images.
    login card on the right.
    email and password inputs with their svgs icon adornment.
    password visibility.
    forgot password link.
    sign up link.
    login button that is connected to the backend and redirects to the dashboard.

forgot password page features:
    designed card on the left with the mascot.
    email input.
    button to email a link after confirmation with the backend, directing them to the reset password page.
    snack bar notification for 'email sent'.

reset password page features:
    designed card on the left with the mascot.
    password input.
    confirm password input.
    backend connected button to reset the password and redirect back to the login page.
    snack bar notification for 'password reset'


Week 7-10
forum page features:
    sorting type feature at the top
    generating posts with profile picture, name (unless anonymous), the title of the post, text, tag, likes and comments, time created
    like button likes the post (connected to the backend) and displays filled or empty
    comment button redirects to the comment page
    clicking the post box will also redirect to the post/comments page
    hovering on the box shows that it's clickable and highlights it
    scroll feature to prevent overflow
    create post button redirects to 'create new post' page
    all discussions button resets any sorting that has filtered out posts
    liked posts button shows only the liked posts
    tags are generated on the side 
    clicking any tag sorts for only the posts with that tag
    tags have a scroll feature in case they overflow
    create a tag button at the bottom only visible to staff
    create tag button redirects to create tag page
    check the alignment of the create tag button

Create Post Page features:
    a title and description textarea
    tag selector for existing tags
    upload image section
    post anonymously option    
    post button (connected to the backend)
    disable button after the first successful create click to prevent multiple calls to create API call
    

Create Tag Page Features:
    a title and description textarea
    a hexadecimal and visual colour selector for the tag colour
    post button (connected to the backend)
    disable button after the first successful create click to prevent multiple calls to create API call

Comment page:
    main post at the top intact with its original features
    added features of delete and edit buttons if the user is the person who posted it
    scrollable comments generated underneath
    similar features to the main forum page but with comments instead
    comments also have to delete and edit button if the user is the person who posted it
    after editing, the post will have a flag indicating it has been edited
    

